openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8765
    description: Generated server url
tags:
  - name: Minio Storage
    description: Minio storage operations, generate pre-signed URLs for uploading and downloading files
  - name: Authentication
    description: Authentication operations
paths:
  /api/v3/auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserDto'
        required: true
      responses:
        '200':
          description: User registered successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v3/auth/login:
    post:
      tags:
        - Authentication
      summary: Authenticate a user
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserDto'
        required: true
      responses:
        '200':
          description: User authenticated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid input
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Internal Server Error
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
  /api/v3/minio/initiate/upload/{fileName}/{attachmentType}:
    get:
      tags:
        - Minio Storage
      summary: Initiate upload, get pre-signed URL to upload file
      operationId: initiateUpload
      parameters:
        - name: fileName
          in: path
          required: true
          schema:
            type: string
        - name: attachmentType
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Pre-signed URL generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateUploadResponse'
        '400':
          description: Invalid filename
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Error while generating presigned URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - BearerAuthentication: []
  /api/v3/minio/initiate/download/{fileName}/{attachmentType}:
    get:
      tags:
        - Minio Storage
      summary: Initiate download, get pre-signed URL to download file
      operationId: initiateDownload
      parameters:
        - name: fileName
          in: path
          required: true
          schema:
            type: string
        - name: attachmentType
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Pre-signed URL generated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateDownloadResponse'
        '400':
          description: Invalid filename
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorMessage'
        '500':
          description: Error while generating presigned URL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
      security:
        - BearerAuthentication: []
components:
  schemas:
    ErrorMessage:
      type: object
      properties:
        message:
          type: string
        date:
          type: string
          format: date-time
    RegisterUserDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    GrantedAuthority:
      type: object
      properties:
        authority:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        enabled:
          type: boolean
        authorities:
          type: array
          items:
            $ref: '#/components/schemas/GrantedAuthority'
        accountNonLocked:
          type: boolean
        accountNonExpired:
          type: boolean
        credentialsNonExpired:
          type: boolean
    LoginUserDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        token:
          type: string
        expiresIn:
          type: integer
          format: int64
    InitiateUploadResponse:
      type: object
      properties:
        preSignedUploadURL:
          type: string
        types:
          type: string
          enum:
            - UPLOAD
            - DOWNLOAD
        expiresAt:
          type: string
          format: date-time
        metadata:
          oneOf:
            - $ref: '#/components/schemas/MetadataAdmin'
            - $ref: '#/components/schemas/MetadataUser'
    MetadataAdmin:
      type: object
      properties:
        fileId:
          type: string
          format: uuid
        bucketName:
          type: string
        fileName:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    MetadataUser:
      type: object
      properties:
        fileName:
          type: string
    ContentDisposition:
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        filename:
          type: string
        charset:
          type: string
        size:
          type: integer
          format: int64
          deprecated: true
        creationDate:
          type: string
          format: date-time
          deprecated: true
        modificationDate:
          type: string
          format: date-time
          deprecated: true
        readDate:
          type: string
          format: date-time
          deprecated: true
        inline:
          type: boolean
        formData:
          type: boolean
        attachment:
          type: boolean
    ErrorResponse:
      type: object
      properties:
        headers:
          type: object
          properties:
            contentType:
              $ref: '#/components/schemas/MediaType'
            ifModifiedSince:
              type: integer
              format: int64
            contentLength:
              type: integer
              format: int64
            connection:
              type: array
              items:
                type: string
            origin:
              type: string
            host:
              type: object
              properties:
                hostString:
                  type: string
                address:
                  type: object
                  properties:
                    hostAddress:
                      type: string
                    address:
                      type: array
                      items:
                        type: string
                        format: byte
                    hostName:
                      type: string
                    linkLocalAddress:
                      type: boolean
                    multicastAddress:
                      type: boolean
                    anyLocalAddress:
                      type: boolean
                    loopbackAddress:
                      type: boolean
                    siteLocalAddress:
                      type: boolean
                    mcglobal:
                      type: boolean
                    mcnodeLocal:
                      type: boolean
                    mclinkLocal:
                      type: boolean
                    mcsiteLocal:
                      type: boolean
                    mcorgLocal:
                      type: boolean
                    canonicalHostName:
                      type: string
                port:
                  type: integer
                  format: int32
                unresolved:
                  type: boolean
                hostName:
                  type: string
            allow:
              uniqueItems: true
              type: array
              items:
                $ref: '#/components/schemas/HttpMethod'
            empty:
              type: boolean
            location:
              type: string
              format: uri
            all:
              type: object
              additionalProperties:
                type: string
              writeOnly: true
            lastModified:
              type: integer
              format: int64
            date:
              type: integer
              format: int64
            range:
              type: array
              items:
                $ref: '#/components/schemas/HttpRange'
            acceptCharset:
              type: array
              items:
                type: string
            contentDisposition:
              $ref: '#/components/schemas/ContentDisposition'
            cacheControl:
              type: string
            contentLanguage:
              type: object
              properties:
                language:
                  type: string
                displayName:
                  type: string
                country:
                  type: string
                variant:
                  type: string
                script:
                  type: string
                unicodeLocaleAttributes:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                unicodeLocaleKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                displayLanguage:
                  type: string
                displayScript:
                  type: string
                displayCountry:
                  type: string
                displayVariant:
                  type: string
                extensionKeys:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
                iso3Language:
                  type: string
                iso3Country:
                  type: string
            etag:
              type: string
            accept:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            expires:
              type: integer
              format: int64
            ifMatch:
              type: array
              items:
                type: string
            pragma:
              type: string
            upgrade:
              type: string
            vary:
              type: array
              items:
                type: string
            accessControlMaxAge:
              type: integer
              format: int64
            ifUnmodifiedSince:
              type: integer
              format: int64
            acceptLanguageAsLocales:
              type: array
              items:
                type: object
                properties:
                  language:
                    type: string
                  displayName:
                    type: string
                  country:
                    type: string
                  variant:
                    type: string
                  script:
                    type: string
                  unicodeLocaleAttributes:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  unicodeLocaleKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  displayLanguage:
                    type: string
                  displayScript:
                    type: string
                  displayCountry:
                    type: string
                  displayVariant:
                    type: string
                  extensionKeys:
                    uniqueItems: true
                    type: array
                    items:
                      type: string
                  iso3Language:
                    type: string
                  iso3Country:
                    type: string
            acceptLanguage:
              type: array
              items:
                type: object
                properties:
                  range:
                    type: string
                  weight:
                    type: number
                    format: double
            basicAuth:
              type: string
              writeOnly: true
            acceptPatch:
              type: array
              items:
                $ref: '#/components/schemas/MediaType'
            ifNoneMatch:
              type: array
              items:
                type: string
            bearerAuth:
              type: string
              writeOnly: true
            accessControlAllowCredentials:
              type: boolean
            accessControlAllowOrigin:
              type: string
            accessControlExposeHeaders:
              type: array
              items:
                type: string
            accessControlAllowHeaders:
              type: array
              items:
                type: string
            accessControlAllowMethods:
              type: array
              items:
                $ref: '#/components/schemas/HttpMethod'
            accessControlRequestMethod:
              $ref: '#/components/schemas/HttpMethod'
            accessControlRequestHeaders:
              type: array
              items:
                type: string
          additionalProperties:
            type: array
            items:
              type: string
        body:
          $ref: '#/components/schemas/ProblemDetail'
        statusCode:
          $ref: '#/components/schemas/HttpStatusCode'
        typeMessageCode:
          type: string
        detailMessageArguments:
          type: array
          items:
            type: object
        detailMessageCode:
          type: string
        titleMessageCode:
          type: string
    HttpMethod:
      type: object
    HttpRange:
      type: object
    HttpStatusCode:
      type: object
      properties:
        error:
          type: boolean
        is3xxRedirection:
          type: boolean
        is1xxInformational:
          type: boolean
        is2xxSuccessful:
          type: boolean
        is4xxClientError:
          type: boolean
        is5xxServerError:
          type: boolean
    MediaType:
      type: object
      properties:
        type:
          type: string
        subtype:
          type: string
        parameters:
          type: object
          additionalProperties:
            type: string
        qualityValue:
          type: number
          format: double
        concrete:
          type: boolean
        charset:
          type: string
        wildcardSubtype:
          type: boolean
        wildcardType:
          type: boolean
        subtypeSuffix:
          type: string
    ProblemDetail:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        status:
          type: integer
          format: int32
        detail:
          type: string
        instance:
          type: string
          format: uri
        properties:
          type: object
          additionalProperties:
            type: object
    InitiateDownloadResponse:
      type: object
      properties:
        preSignedUploadURL:
          type: string
        types:
          type: string
          enum:
            - DOWNLOAD
            - UPLOAD
        expiresAt:
          type: string
          format: date-time
        metadata:
          oneOf:
            - $ref: '#/components/schemas/MetadataAdmin'
            - $ref: '#/components/schemas/MetadataUser'
  securitySchemes:
    BearerAuthentication:
      type: http
      scheme: bearer
      bearerFormat: JWT
